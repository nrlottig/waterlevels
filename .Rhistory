filter(WBIC != 2017500)
#get Conductivity data
Conductivity_final <- read_csv("data/Conductivity_final.csv")
dat_cond <- Conductivity_final %>% select(WBIC,final_value) %>% rename(cond=final_value)
dat <- dat %>% left_join(dat_cond)
#get elevation data
lake_elevation <- read_excel("data/seepage_lake_shed_elev.xlsx")
dat_elevation <- lake_elevation %>% select(WBIC,lake_MEAN,watershed_MIN,elevation_difference)
dat <- dat %>% left_join(dat_elevation)
#get ecoregion data
regression_coefs_20180328_eco_land <- read_excel("data/regression_coefs_20180328_eco_land.xlsx")
regression_coefs_20180328_eco_land <- regression_coefs_20180328_eco_land[!duplicated(regression_coefs_20180328_eco_land$WBIC),] %>%
select(-WiscID)
dat <- dat %>% left_join(regression_coefs_20180328_eco_land)
#get watershed slope
seepage_lake_slope_data <- read_csv("data/seepage_lake_slope_data.csv") %>%
select(-X1,-WiscID,-LakeName) %>%
mutate(mean_ann_wdrl_gals = replace(mean_ann_wdrl_gals,is.na(mean_ann_wdrl_gals),0)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(seepage_lake_slope_data)
#get Ca and Mg Data
CaMg <- read_csv("data/CaMg_20181109.csv")
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305))
View(dat_cations)
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC)
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305))
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC)
View(dat_cations)
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC,.keep_all = TRUE)
View(dat_cations)
dat <- ecocontext_riparian %>% select(-FID,
-ID,
-OBJECTID,
-WATERBODY_,
-HYDROID,
-HYDROCODE,
-HYDROTYPE,
-LANDLOCK_C,
-WiscID,
-County,
-WatershedA,
-hydro24k,
-centroid_x,
-centroid_y,
-problem,
-landscapep,
-NATURAL_CO,
-HYDROLOGY,
-Lake_type,
-Katie_clas,
-Katie_note,
-R_LU06_MISSING) %>%
select(everything(),-contains("W_")) %>%
filter(WBIC != 783730) %>%
filter(WBIC != 2014700) %>%
filter(WBIC != 2017500)
#get Conductivity data
Conductivity_final <- read_csv("data/Conductivity_final.csv")
dat_cond <- Conductivity_final %>% select(WBIC,final_value) %>% rename(cond=final_value)
dat <- dat %>% left_join(dat_cond)
#get Ca and Mg Data
CaMg <- read_csv("data/CaMg_20181109.csv")
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(dat_cations)
View(dat)
#get elevation data
lake_elevation <- read_excel("data/seepage_lake_shed_elev.xlsx")
dat_elevation <- lake_elevation %>% select(WBIC,lake_MEAN,watershed_MIN,elevation_difference)
dat <- dat %>% left_join(dat_elevation)
#get ecoregion data
regression_coefs_20180328_eco_land <- read_excel("data/regression_coefs_20180328_eco_land.xlsx")
regression_coefs_20180328_eco_land <- regression_coefs_20180328_eco_land[!duplicated(regression_coefs_20180328_eco_land$WBIC),] %>%
select(-WiscID)
dat <- dat %>% left_join(regression_coefs_20180328_eco_land)
#get watershed slope
seepage_lake_slope_data <- read_csv("data/seepage_lake_slope_data.csv") %>%
select(-X1,-WiscID,-LakeName) %>%
mutate(mean_ann_wdrl_gals = replace(mean_ann_wdrl_gals,is.na(mean_ann_wdrl_gals),0)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(seepage_lake_slope_data)
View(dat)
#reduce data to seepage lakes
dat.gnet <- read_csv("data/Gnet_slopes.csv")
#reduce data to seepage lakes
dat.gnet <- read_csv("data/Gnet_slopes.csv") %>% select(WBIC)
View(dat.gnet)
dat <- dat %>% right_join(dat.gnet)
View(dat)
summary(dat)
dat <- ecocontext_riparian %>% select(-FID,
-ID,
-OBJECTID,
-WATERBODY_,
-HYDROID,
-HYDROCODE,
-HYDROTYPE,
-LANDLOCK_C,
-WiscID,
-County,
-WatershedA,
-hydro24k,
-centroid_x,
-centroid_y,
-problem,
-landscapep,
-NATURAL_CO,
-HYDROLOGY,
-Lake_type,
-Katie_clas,
-Katie_note,
-R_LU06_MISSING) %>%
select(everything(),-contains("W_")) %>%
filter(WBIC != 783730) %>%
filter(WBIC != 2014700) %>%
filter(WBIC != 2017500) %>%
mutate(MeanDepth = replace(MeanDepth==0,NA))
dat <- ecocontext_riparian %>% select(-FID,
-ID,
-OBJECTID,
-WATERBODY_,
-HYDROID,
-HYDROCODE,
-HYDROTYPE,
-LANDLOCK_C,
-WiscID,
-County,
-WatershedA,
-hydro24k,
-centroid_x,
-centroid_y,
-problem,
-landscapep,
-NATURAL_CO,
-HYDROLOGY,
-Lake_type,
-Katie_clas,
-Katie_note,
-R_LU06_MISSING) %>%
select(everything(),-contains("W_")) %>%
filter(WBIC != 783730) %>%
filter(WBIC != 2014700) %>%
filter(WBIC != 2017500) %>%
mutate(MeanDepth = replace(MeanDepth,MeanDepth==0,NA))
View(dat)
#get Conductivity data
Conductivity_final <- read_csv("data/Conductivity_final.csv")
dat_cond <- Conductivity_final %>% select(WBIC,final_value) %>% rename(cond=final_value)
dat <- dat %>% left_join(dat_cond)
#get Ca and Mg Data
CaMg <- read_csv("data/CaMg_20181109.csv")
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(dat_cations)
#get elevation data
lake_elevation <- read_excel("data/seepage_lake_shed_elev.xlsx")
dat_elevation <- lake_elevation %>% select(WBIC,lake_MEAN,watershed_MIN,elevation_difference)
dat <- dat %>% left_join(dat_elevation)
#get ecoregion data
regression_coefs_20180328_eco_land <- read_excel("data/regression_coefs_20180328_eco_land.xlsx")
regression_coefs_20180328_eco_land <- regression_coefs_20180328_eco_land[!duplicated(regression_coefs_20180328_eco_land$WBIC),] %>%
select(-WiscID)
dat <- dat %>% left_join(regression_coefs_20180328_eco_land)
#get watershed slope
seepage_lake_slope_data <- read_csv("data/seepage_lake_slope_data.csv") %>%
select(-X1,-WiscID,-LakeName) %>%
mutate(mean_ann_wdrl_gals = replace(mean_ann_wdrl_gals,is.na(mean_ann_wdrl_gals),0)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(seepage_lake_slope_data)
#reduce data to seepage lakes
dat.gnet <- read_csv("data/Gnet_slopes.csv") %>% select(WBIC)
dat <- dat %>% right_join(dat.gnet)
#cleanup data
dat <- remove_zero_cols(as.data.frame(dat))
View(dat)
rm(list=setdiff(ls(), "dat"))
dat.gnet <- read_csv("data/Gnet_slopes.csv")
dat <- dat %>% right_join(dat.gnet)
refcols <- c("WBIC",
"LakeName",
"US_L3NAME",
"ECO_LANDSC",
"HUC12_CODE")
respcols <- c("mean",
"ll",
"ul",
"slope_group")
non_transformed <- c("lat",
"long")
dat <- dat[,c(refcols,respcols,non_transformed,setdiff(names(dat),c(refcols,respcols,non_transformed)))]
dat1 <- dat[,c(refcols,respcols,non_transformed)]
dat2 <- dat[,setdiff(names(dat),c(refcols,respcols,non_transformed))]
trans.data <- function(x) {
x.out <- bestNormalize(x,allow_orderNorm = FALSE)$x.t
return(x.out)
}
dat_transform <- dat2 %>%
mutate_all(funs(trans.data))
dat_final <- cbind(dat1[,refcols],dat_transform)
write_csv(dat_final,"data/ecocontext_transformed_riparian.csv")
write_csv(dat,"data/ecocontext_riparian.csv")
rm(list=ls())
lapply(paste('package:',names(sessionInfo()$otherPkgs),sep=""),detach,character.only=TRUE,unload=TRUE)
library(tidyverse)
library(cowplot)
library(ggmap)
library(maps)
library(mapdata)
library(bestNormalize)
library(randomForest)
####Original Data
dat.gnet <- read_csv("data/Gnet_slopes.csv")
eco <- read_csv("data/ecocontext_transformed_riparian.csv")
dat.gnet <- dat.gnet %>% left_join(eco)
dat.gnet$WBIC_name <- factor(dat.gnet$WBIC,levels=dat.gnet$WBIC[order(dat.gnet$mean)]) #Code to order gnet variables for plotting
dat.gnet <- dat.gnet %>% mutate(slope_group = as.numeric(slope_group)) %>%
mutate(slope_group = replace(slope_group,which(mean < -1.622698818 & slope_group==0),2))
#Ordered plot of Gnet
ggplot(data = dat.gnet,aes(x = WBIC_name,y=mean,color=as.factor(slope_group))) +
#Turn this into a grey polygon band
geom_hline(yintercept = -1.622698818,col="blue") +
geom_hline(yintercept = -1.23224061632639,col="blue")+
geom_point() +
geom_errorbar(aes(ymin=ll,ymax=ul)) +
labs(x="WiscID",y="Groundwater Recharge (mm/d)", color="Lake Group") +
theme(text=element_text(size=10,  family="sans"),
axis.text.x = element_text(angle = 90, hjust = 1,size=6)) +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,255,maxColorValue = 255),
rgb(217,95,2,255,maxColorValue = 255),
rgb(117,112,179,255,maxColorValue = 255)))
ggsave(filename = "graphics/gnet_by_gnet.png",units = "in",dpi = 300,width=8,height=5)
WI <- map_data(map = "state",region = "wisconsin")
WI.cty <- map_data(map = "county",region = "wisconsin")
ggplot() +
geom_polygon(data = WI, aes(x=long, y = lat, group = group), fill = NA, color = "black") +
geom_polygon(data = WI.cty, aes(x=long, y = lat, group = group), fill = NA, color = "darkgrey") +
coord_fixed(1.3) +
geom_point(data = dat.gnet,aes(x =long,y=lat,color=as.factor(slope_group)),size=3) +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,200,maxColorValue = 255),
rgb(217,95,2,200,maxColorValue = 255),
rgb(117,112,179,200,maxColorValue = 255)))
#BoxPlots
dat.box <- dat.gnet[,c(5,10:40)]
#BoxPlots
dat.box <- dat.gnet[,c(5,10:41)]
dat.box.long <- dat.box %>% gather(key = "key",value = "value",-slope_group)
ggplot(data = dat.box.long) +
geom_boxplot(aes(x=as.factor(slope_group),y=value,color=as.factor(slope_group))) +
facet_wrap(vars(key),scales = "free") +
theme(text=element_text(size=10,  family="sans")) +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,255,maxColorValue = 255),
rgb(217,95,2,255,maxColorValue = 255),
rgb(117,112,179,255,maxColorValue = 255))) +
labs(y="Driver Value",x="Lake Group")
refcols <- c("WBIC",
"LakeName",
"US_L3NAME",
"ECO_LANDSC",
"HUC12_CODE",
"WBIC_name")
respcols <- c("mean",
"ll",
"ul",
"slope_group")
dat.long <- dat.gnet %>% gather(key = variable,value = value,-refcols,-respcols)
p.out <- ggplot(dat.long,aes(x=value,y=mean)) + geom_point(aes(color=as.factor(slope_group))) +
geom_smooth(method=lm, se=FALSE) +
facet_wrap(vars(ECO_LANDSC,variable),scales="free") +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,255,maxColorValue = 255),
rgb(217,95,2,255,maxColorValue = 255),
rgb(117,112,179,255,maxColorValue = 255))) +
labs(y="Groundwater Recharge (mmd)",x="Driver Value")
p.out
p.out <- ggplot(dat.long,aes(x=value,y=mean)) + geom_point(aes(color=as.factor(slope_group))) +
geom_smooth(method=lm, se=FALSE) +
facet_wrap(vars(variable,ECO_LANDSC),scales="free") +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,255,maxColorValue = 255),
rgb(217,95,2,255,maxColorValue = 255),
rgb(117,112,179,255,maxColorValue = 255))) +
labs(y="Groundwater Recharge (mmd)",x="Driver Value")
p.out
ggsave(filename = "graphics/Eco_GNET.png",plot = p.out,width = 24,height = 24,units="in",dpi = 300,device = "png")
ggsave(filename = "graphics/Eco_GNET.png",plot = p.out,width = 38,height = 38,units="in",dpi = 300,device = "png")
p.out <- ggplot(dat.long,aes(x=value,y=mean)) + geom_point(aes(color=as.factor(slope_group))) +
geom_smooth(method=lm, se=FALSE) +
facet_wrap(vars(variable),scales="free") +
scale_color_manual(name="Lake Group",
labels=c("Low Recharge","Regional Average","High Recharge"),
values=c(rgb(27,158,119,255,maxColorValue = 255),
rgb(217,95,2,255,maxColorValue = 255),
rgb(117,112,179,255,maxColorValue = 255))) +
labs(y="Groundwater Recharge (mmd)",x="Driver Value")
ggsave(filename = "graphics/GNET.png",plot = p.out,width = 12,height = 12,units="in",dpi = 300,device = "png")
library(tidyverse)
library(readxl)
library(LAGOSNE)
library(party)
library(randomForest)
library(bestNormalize)
#FUNCTIONS
remove_zero_cols <- function(df) {
rem_vec <- NULL
df <- as.data.frame(df)
for(i in 1:ncol(df)){
if(is.numeric(df[,i])==TRUE){
this_sum <- summary(df[,i])
zero_test <- length(which(this_sum == 0))
if(zero_test == 4) {                #removes column if 50% of data are zeros
rem_vec[i] <- names(df)[i]
}
}
}
features_to_remove <- rem_vec[!is.na(rem_vec)]
rem_ind <- which(names(df) %in% features_to_remove)
df <- df[,-rem_ind]
return(df)
}
#rawdata
ecocontext_riparian <- read_excel("data/HYDRO_WATERBODY_seepage_24oct2018.xlsx",sheet = "primary_variables")
dat <- ecocontext_riparian %>% select(-FID,
-ID,
-OBJECTID,
-WATERBODY_,
-HYDROID,
-HYDROCODE,
-HYDROTYPE,
-LANDLOCK_C,
-WiscID,
-County,
-WatershedA,
-hydro24k,
-centroid_x,
-centroid_y,
-problem,
-landscapep,
-NATURAL_CO,
-HYDROLOGY,
-Lake_type,
-Katie_clas,
-Katie_note,
-R_LU06_MISSING) %>%
select(everything(),-contains("W_")) %>%
filter(WBIC != 783730) %>%
filter(WBIC != 2014700) %>%
filter(WBIC != 2017500) %>%
mutate(MeanDepth = replace(MeanDepth,MeanDepth==0,NA)) %>%
mutate(develop= R_LU06_21+R_LU06_22+R_LU06_23+R_LU06_24) %>%
mutate(forest = R_LU06_41+R_LU06_42+R_LU06_43) %>%
mutate(ag = R_LU06_81+R_LU06_82) %>%
mutate(SDI = SHAPE_LEN/(2*sqrt(pi*SHAPE_AREA))) %>%
mutate(area_depth_ratio = SHAPE_AREA/(MaxDepth*0.3048)) %>%
mutate(forest = R_LU06_41+R_LU06_42+R_LU06_43) %>%
mutate(wetland = R_LU06_90+RLU06_95)
dat <- ecocontext_riparian %>% select(-FID,
-ID,
-OBJECTID,
-WATERBODY_,
-HYDROID,
-HYDROCODE,
-HYDROTYPE,
-LANDLOCK_C,
-WiscID,
-County,
-WatershedA,
-hydro24k,
-centroid_x,
-centroid_y,
-problem,
-landscapep,
-NATURAL_CO,
-HYDROLOGY,
-Lake_type,
-Katie_clas,
-Katie_note,
-R_LU06_MISSING) %>%
select(everything(),-contains("W_")) %>%
filter(WBIC != 783730) %>%
filter(WBIC != 2014700) %>%
filter(WBIC != 2017500) %>%
mutate(MeanDepth = replace(MeanDepth,MeanDepth==0,NA)) %>%
mutate(develop= R_LU06_21+R_LU06_22+R_LU06_23+R_LU06_24) %>%
mutate(forest = R_LU06_41+R_LU06_42+R_LU06_43) %>%
mutate(ag = R_LU06_81+R_LU06_82) %>%
mutate(SDI = SHAPE_LEN/(2*sqrt(pi*SHAPE_AREA))) %>%
mutate(area_depth_ratio = SHAPE_AREA/(MaxDepth*0.3048)) %>%
mutate(forest = R_LU06_41+R_LU06_42+R_LU06_43) %>%
mutate(wetland = R_LU06_90+R_LU06_95)
#get Conductivity data
Conductivity_final <- read_csv("data/Conductivity_final.csv")
dat_cond <- Conductivity_final %>% select(WBIC,final_value) %>% rename(cond=final_value)
dat <- dat %>% left_join(dat_cond)
#get Ca and Mg Data
CaMg <- read_csv("data/CaMg_20181109.csv")
dat_cations <- CaMg %>% select(WBIC,mg_average,ca_average) %>%
mutate(cation_ratio = (ca_average/40.078)/(mg_average/24.305)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(dat_cations)
#get elevation data
lake_elevation <- read_excel("data/seepage_lake_shed_elev.xlsx")
dat_elevation <- lake_elevation %>% select(WBIC,lake_MEAN,watershed_MIN,elevation_difference)
dat <- dat %>% left_join(dat_elevation)
#get ecoregion data
regression_coefs_20180328_eco_land <- read_excel("data/regression_coefs_20180328_eco_land.xlsx")
regression_coefs_20180328_eco_land <- regression_coefs_20180328_eco_land[!duplicated(regression_coefs_20180328_eco_land$WBIC),] %>%
select(-WiscID)
dat <- dat %>% left_join(regression_coefs_20180328_eco_land)
#get watershed slope
seepage_lake_slope_data <- read_csv("data/seepage_lake_slope_data.csv") %>%
select(-X1,-WiscID,-LakeName) %>%
mutate(mean_ann_wdrl_gals = replace(mean_ann_wdrl_gals,is.na(mean_ann_wdrl_gals),0)) %>%
distinct(WBIC,.keep_all = TRUE)
dat <- dat %>% left_join(seepage_lake_slope_data)
#reduce data to seepage lakes
dat.gnet <- read_csv("data/Gnet_slopes.csv") %>% select(WBIC)
dat <- dat %>% right_join(dat.gnet)
#cleanup data
dat <- remove_zero_cols(as.data.frame(dat))
rm(list=setdiff(ls(), "dat"))
dat.gnet <- read_csv("data/Gnet_slopes.csv")
dat <- dat %>% right_join(dat.gnet)
refcols <- c("WBIC",
"LakeName",
"US_L3NAME",
"ECO_LANDSC",
"HUC12_CODE")
respcols <- c("mean",
"ll",
"ul",
"slope_group")
non_transformed <- c("lat",
"long")
dat <- dat[,c(refcols,respcols,non_transformed,setdiff(names(dat),c(refcols,respcols,non_transformed)))]
dat1 <- dat[,c(refcols,respcols,non_transformed)]
dat2 <- dat[,setdiff(names(dat),c(refcols,respcols,non_transformed))]
trans.data <- function(x) {
x.out <- bestNormalize(x,allow_orderNorm = FALSE)$x.t
return(x.out)
}
dat_transform <- dat2 %>%
mutate_all(funs(trans.data))
dat_final <- cbind(dat1[,refcols],dat_transform)
write_csv(dat_final,"data/ecocontext_transformed_riparian.csv")
write_csv(dat,"data/ecocontext_riparian.csv")
rm(list=ls())
library(readr)
data <- read_csv("~/Downloads/Book1.csv",
col_types = cols(`Arsenic, µg/L` = col_number(),
`Cadmium, µg/L` = col_number(),
`Chloride, µg/L` = col_number(),
`Copper, µg/L` = col_number(), `DOC, µg/L` = col_number(),
`Iron, µg/L` = col_number(), `Lead, µg/L` = col_number(),
`Sodium, µg/L` = col_number(), X15 = col_skip(),
X16 = col_skip(), X17 = col_skip(),
`Zinc, µg/L` = col_number()))
View(data)
dat <- data %>%
mutate(cl_mol='Chloride, ug/L'/35.453)
dat <- data %>%
mutate(cl_mol=Chloride, ug/L/35.453)
names(data)
dat <- data %>%
mutate(cl_mol="Chloride, ug"/L/35.453)
dat <- data %>%
mutate(cl_mol="Chloride, ug/L"/35.453)
data$cl_mol = data[,14]/35.453
data$na_mol = data[,6]/22.989769
View(data)
View(data)
library(readr)
data <- read_csv("~/Downloads/Book1.csv",
col_types = cols(`Arsenic, µg/L` = col_number(),
`Cadmium, µg/L` = col_number(),
`Chloride, µg/L` = col_number(),
`Copper, µg/L` = col_number(), `DOC, µg/L` = col_number(),
`Iron, µg/L` = col_number(), `Lead, µg/L` = col_number(),
`Sodium, µg/L` = col_number(), X15 = col_skip(),
X16 = col_skip(), X17 = col_skip(),
`Zinc, µg/L` = col_number()))
View(data)
data <- as.data.frame(data)
data
data$cl_mol = data[,14]/35.453
data$na_mol = data[,6]/22.989769
View(data)
data$nacl_ratio = data$na_mol/data$cl_mol
names(data)
data$doc <- data[,13]
plot(data$nacl_ratio,data$doc)
dev.off()
graphics.off()
plot(data$nacl_ratio,data$doc)
View(data)
